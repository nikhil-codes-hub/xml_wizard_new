{
  "schema": "1_test.xsd",
  "mode": "complete",
  "seed": 999,
  
  "values": {
    "/TravelBooking/BookingID": "CONST-BK-001",
    "PickupLocation": "Validated Pickup Terminal - Security Checkpoint Alpha"
  },
  
  "patterns": {
    "*ID": "generate:uuid",
    "*Amount": {
      "generator": "generate:currency", 
      "constraints": {
        "min": 500.00,
        "max": 5000.00,
        "precision": 2
      }
    },
    "*Time": {
      "generator": "generate:datetime",
      "constraints": {
        "format": "ISO8601",
        "future_only": true
      }
    },
    "*Date": {
      "generator": "generate:date",
      "constraints": {
        "format": "YYYY-MM-DD",
        "min_year": 1920,
        "max_year": 2010
      }
    },
    "*Airport": {
      "generator": "generate:code",
      "constraints": {
        "format": "XXX",
        "valid_codes_only": true
      }
    },
    "*Name": {
      "generator": "generate:name",
      "constraints": {
        "min_length": 2,
        "max_length": 30,
        "alpha_only": true
      }
    }
  },
  
  "choices": {
    "TravelBooking": {
      "conditions": [
        {
          "if": "Amount >= 1000 && PaymentMethod == 'ValidatedCard'",
          "choose": "PickupLocation"
        }
      ],
      "default": "PickupLocation"
    }
  },
  
  "templates": {
    "validated_passenger_pool": {
      "data": [
        {
          "FirstName": "Thomas",
          "LastName": "Anderson",
          "Gender": "Male", 
          "BirthDate": "1980-03-15",
          "PassengerID": "CONST-001",
          "age_category": "Adult",
          "validation_status": "Verified"
        },
        {
          "FirstName": "Sarah", 
          "LastName": "Connor",
          "Gender": "Female",
          "BirthDate": "1975-12-22", 
          "PassengerID": "CONST-002",
          "age_category": "Adult",
          "validation_status": "Verified"
        }
      ],
      "cycle": "sequential",
      "constraints": {
        "age_validation": {
          "min_age": 18,
          "max_age": 80,
          "birth_date_format": "YYYY-MM-DD"
        }
      },
      "computed": {
        "AgeAtBooking": {
          "formula": "2024 - year(BirthDate)",
          "inputs": ["BirthDate"]
        },
        "ValidationCode": "concat('V-', PassengerID)"
      }
    },
    
    "constraint_flight_pool": {
      "data": [
        {
          "DepartureAirport": "LAX",
          "ArrivalAirport": "CDG", 
          "DepartureTime": "2024-10-15T09:00:00",
          "ArrivalTime": "2024-10-15T21:00:00",
          "SegmentID": "CONST-SEG-001",
          "flight_type": "International"
        },
        {
          "DepartureAirport": "JFK",
          "ArrivalAirport": "LHR",
          "DepartureTime": "2024-10-16T14:30:00", 
          "ArrivalTime": "2024-10-17T06:45:00",
          "SegmentID": "CONST-SEG-002",
          "flight_type": "International"
        }
      ],
      "cycle": "sequential",
      "constraints": {
        "flight_logic": {
          "departure_before_arrival": true,
          "different_airports": true,
          "min_duration_hours": 1,
          "max_duration_hours": 24
        }
      },
      "computed": {
        "FlightDuration": "ArrivalTime - DepartureTime",
        "RouteValidation": "DepartureAirport != ArrivalAirport ? 'Valid' : 'Invalid'"
      }
    },
    
    "payment_validation_pool": {
      "data": [
        {
          "PaymentMethod": "ValidatedCard",
          "Amount": "1250.50",
          "Currency": "USD",
          "payment_tier": "Premium"
        },
        {
          "PaymentMethod": "SecureTransfer", 
          "Amount": "2847.75",
          "Currency": "EUR",
          "payment_tier": "Business"
        }
      ],
      "cycle": "sequential",
      "constraints": {
        "payment_validation": {
          "allowed_currencies": ["USD", "EUR", "GBP"],
          "amount_range": {"min": 500.00, "max": 5000.00},
          "precision": 2,
          "payment_methods": ["ValidatedCard", "SecureTransfer"]
        }
      },
      "computed": {
        "PaymentValidation": {
          "formula": "Amount >= 500 && Amount <= 5000 ? 'Valid' : 'Invalid'",
          "inputs": ["Amount"]
        },
        "PaymentCode": "concat(Currency, '-', PaymentMethod)"
      }
    }
  },
  
  "constraints": {
    "global": {
      "ensure_unique_combinations": true,
      "max_depth": 6,
      "business_hours_only": true
    },
    "elements": {
      "Passenger": {
        "min_count": 1,
        "max_count": 4,
        "default_count": 2
      },
      "FlightSegment": {
        "min_count": 1, 
        "max_count": 3,
        "default_count": 1
      },
      "BookingID": {
        "format": "CONST-BK-###",
        "length": 12,
        "unique": true
      }
    },
    "validation_rules": {
      "business_rules": {
        "min_booking_amount": 500.00,
        "max_booking_amount": 5000.00,
        "allowed_currencies": ["USD", "EUR", "GBP"]
      }
    }
  },
  
  "namespaces": {
    "default": "http://example.com/travel",
    "prefixes": {
      "travel": "http://example.com/travel",
      "validation": "http://example.com/validation"
    }
  }
}